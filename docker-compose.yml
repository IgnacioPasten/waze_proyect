services:
  mongodb:
    image: mongo:5.0.18
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    restart: unless-stopped

  app:
    build: .
    container_name: waze_proyect-app
    environment:
      MONGO_URI: "mongodb://root:example@mongodb:27017"
    depends_on:
      - mongodb
    volumes:
      - ./app:/app
    working_dir: /app
    command: python main.py
    restart: unless-stopped

  hadoop-pig:
    build:
      context: .
      dockerfile: Dockerfile-hadoop-pig
    container_name: hadoop-pig
    hostname: hadoop
    ports:
      - "50070:50070"   #NameNode UI
      - "8088:8088"     #ResourceManager
      - "19888:19888"   #HistoryServer
      - "4040:4040"     #Pig UI
      - "8042:8042"     #NodeManager UI
      - "8032:8032"     #ResourceManager RPC
    environment:
      - HADOOP_HOME=/opt/hadoop
      - PIG_CLASSPATH=$HADOOP_HOME/etc/hadoop
      - YARN_RESOURCEMANAGER_OPTS="-Dyarn.resourcemanager.connect.max-wait.ms=30000"
      - HADOOP_LOG_DIR=/opt/hadoop/logs
      - YARN_CONF_DIR=/opt/hadoop/etc/hadoop
      - PIG_OPTS="-Dpig.log.dir=/opt/hadoop/logs"
      - HADOOP_OPTS="-Djava.net.preferIPv4Stack=true"
    volumes:
      - hadoop-namenode:/hadoop/dfs/name
      - hadoop-datanode:/hadoop/dfs/data
      - ./config:/opt/hadoop/etc/hadoop
      - ./init-hadoop.sh:/init-hadoop.sh
      - ./app/incidentes_limpios.csv:/app/incidentes_limpios.csv
      - ./app/pig:/app/pig
      - ./hadoop-logs:/opt/hadoop/logs
    network_mode: host
    extra_hosts:
      - "hadoop:127.0.0.1"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://hadoop:8088/ws/v1/cluster/info"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  hadoop-namenode:
  hadoop-datanode:
  hadoop-logs: